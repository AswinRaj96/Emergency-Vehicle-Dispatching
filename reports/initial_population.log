Traceback (most recent call last):
  File "/home/yinan/book-env/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/yinan/book-env/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Sampling using Generalized Halton Number Quasi-random Generator
import ghalton
sequencer = ghalton.GeneralizedHalton(ghalton.EA_PERMS[:2])
P_random_quasi = np.array(sequencer.get(N))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_33042/1145215104.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;31m# Sampling using Generalized Halton Number Quasi-random Generator[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0;32mimport[0m [0mghalton[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0msequencer[0m [0;34m=[0m [0mghalton[0m[0;34m.[0m[0mGeneralizedHalton[0m[0;34m([0m[0mghalton[0m[0;34m.[0m[0mEA_PERMS[0m[0;34m[[0m[0;34m:[0m[0;36m2[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0mP_random_quasi[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0msequencer[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mN[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'ghalton'
ModuleNotFoundError: No module named 'ghalton'

